options {
    BUILD_PARSER=true;
    IGNORE_CASE=true;
    DEBUG_TOKEN_MANAGER=true;
}

PARSER_BEGIN(AtScriptParser)

import java.io.*;
import java.nio.charset.Charset;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Paths;

public class AtScriptParser
{
    public static void main(String [] args) throws IOException
    {
      	byte[] encoded = Files.readAllBytes(Paths.get(args[0]));
	  	String content = new String(encoded, StandardCharsets.UTF_8);
        java.io.StringReader sr = new java.io.StringReader(content);
        AtScriptParser parser = new AtScriptParser(sr);
        try {
            parser.Expression();
        }
        catch (ParseException ex) {
            ex.printStackTrace();
        }
    }
}
PARSER_END(AtScriptParser)


SKIP : {
    <IGNORE : [" ", "\n", "\t", "\r"]>
   | <"//" (~["\n"])* ("\n"|"\r")? >
   | <"/*" > : ML_COMMENT
}

<ML_COMMENT> SKIP :
{
  <"*/" >: DEFAULT
  |<~[]>
}



TOKEN : {
  <DIGIT : ["0"-"9"]>
}

void Expression() : { StringBuffer sb = new StringBuffer(); }
{
  LOOKAHEAD(2) (Term() "+" Expression()) | Term() 
}

void Term() : {} 
{
  <DIGIT>
}