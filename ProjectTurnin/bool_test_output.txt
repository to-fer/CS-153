>program
> Assignment
>  identifier
>  number
> Assignment
>  identifier
>  number
> Assignment
>  identifier
>  number
> Assignment
>  identifier
>  number
> if_stmt
>  if_part
>   condition
>    number
>    boolean_op
>     LESS_THAN
>    add
>     number
>     number
>   if_body
>    Compound_stmt
>     println
>      string
>  else_part
>   if_body
>    Compound_stmt
>     println
>      string
>     Assignment
>      identifier
>      add
>       identifier
>       number
> if_stmt
>  if_part
>   condition
>    number
>    boolean_op
>     LESS_THAN
>    add
>     number
>     number
>   if_body
>    Compound_stmt
>     println
>      string
>     Assignment
>      identifier
>      add
>       identifier
>       number
>  else_part
>   if_body
>    Compound_stmt
>     println
>      string
> if_stmt
>  if_part
>   condition
>    number
>    boolean_op
>     GREATER_THAN
>    add
>     number
>     number
>   if_body
>    Compound_stmt
>     println
>      string
>  else_part
>   if_body
>    Compound_stmt
>     println
>      string
>     Assignment
>      identifier
>      add
>       identifier
>       number
> if_stmt
>  if_part
>   condition
>    number
>    boolean_op
>     GREATER_THAN
>    number
>   if_body
>    Compound_stmt
>     println
>      string
>     Assignment
>      identifier
>      add
>       identifier
>       number
>  else_part
>   if_body
>    Compound_stmt
>     println
>      string
> if_stmt
>  if_part
>   condition
>    number
>    boolean_op
>     GREATER_THAN_OR_EQUALS
>    add
>     number
>     number
>   if_body
>    Compound_stmt
>     println
>      string
> if_stmt
>  if_part
>   condition
>    number
>    boolean_op
>     GREATER_THAN_OR_EQUALS
>    number
>   if_body
>    Compound_stmt
>     println
>      string
> if_stmt
>  if_part
>   condition
>    number
>    boolean_op
>     GREATER_THAN_OR_EQUALS
>    number
>   if_body
>    Compound_stmt
>     println
>      string
>     Assignment
>      identifier
>      add
>       identifier
>       number
> if_stmt
>  if_part
>   condition
>    number
>    boolean_op
>     LESS_THAN_OR_EQUALS
>    add
>     number
>     number
>   if_body
>    Compound_stmt
>     println
>      string
> if_stmt
>  if_part
>   condition
>    number
>    boolean_op
>     LESS_THAN_OR_EQUALS
>    number
>   if_body
>    Compound_stmt
>     println
>      string
>     Assignment
>      identifier
>      add
>       identifier
>       number
> if_stmt
>  if_part
>   condition
>    number
>    boolean_op
>     LESS_THAN_OR_EQUALS
>    number
>   if_body
>    Compound_stmt
>     println
>      string
>  else_part
>   if_body
>    Compound_stmt
>     println
>      string
>     Assignment
>      identifier
>      add
>       identifier
>       number
> if_stmt
>  if_part
>   condition
>    number
>    boolean_op
>     EQUALITY
>    number
>   if_body
>    Compound_stmt
>     println
>      string
>  else_part
>   if_body
>    Compound_stmt
>     println
>      string
>     Assignment
>      identifier
>      add
>       identifier
>       number
> if_stmt
>  if_part
>   condition
>    number
>    boolean_op
>     EQUALITY
>    number
>   if_body
>    Compound_stmt
>     println
>      string
>     Assignment
>      identifier
>      add
>       identifier
>       number
> if_stmt
>  if_part
>   condition
>    number
>    boolean_op
>     NOT_EQUALS
>    number
>   if_body
>    Compound_stmt
>     println
>      string
>     Assignment
>      identifier
>      add
>       identifier
>       number
>  else_part
>   if_body
>    Compound_stmt
>     println
>      string
> if_stmt
>  if_part
>   condition
>    number
>    boolean_op
>     NOT_EQUALS
>    number
>   if_body
>    Compound_stmt
>     println
>      string
> println
>  string
> println
>  string
> println
>  number
> println
>  string
> Assignment
>  identifier
>  subtract
>   number
>   identifier
> println
>  identifier
> println
>  string
> println
>  number
> println
>  string
> Assignment
>  identifier
>  subtract
>   number
>   identifier
> println
>  identifier
> println
>  string
> println
>  string
> println
>  number
> println
>  string
> println
>  add
>   identifier
>   identifier

===== CROSS-REFERENCE TABLE =====

*** PROGRAM TypeScript ***

Identifier       Line numbers    Type specification
----------       ------------    ------------------
elseCorrect      006
                                 Defined as: variable
                                 Scope nesting level: 1
                                 Type form = scalar, Type id = number
elseWrong        005 012 012 028 028 066 066 076 076
                                 Defined as: variable
                                 Scope nesting level: 1
                                 Type form = scalar, Type id = number
passed           003
                                 Defined as: variable
                                 Scope nesting level: 1
                                 Type form = scalar, Type id = number
result           102 103 116
                                 Defined as: variable
                                 Scope nesting level: 1
                                 Type form = scalar, Type id = number
result2          108 109 116
                                 Defined as: variable
                                 Scope nesting level: 1
                                 Type form = scalar, Type id = number
wrong            002 017 017 033 033 049 049 059 059 081 081 088 088 102 108
                                 Defined as: variable
                                 Scope nesting level: 1
                                 Type form = scalar, Type id = number

===== INTERMEDIATE CODE =====

*** PROGRAM TypeScript ***

<program type_id="char">
    <Assignment type_id="number">
        <identifier id="wrong" level="1" index="0" type_id="number" />
        <number value="0.0" type_id="number" />
    </Assignment>
    <Assignment type_id="number">
        <identifier id="passed" level="1" index="0" type_id="number" />
        <number value="0.0" type_id="number" />
    </Assignment>
    <Assignment type_id="number">
        <identifier id="elseWrong" level="1" index="0" type_id="number" />
        <number value="0.0" type_id="number" />
    </Assignment>
    <Assignment type_id="number">
        <identifier id="elseCorrect" level="1" index="0" type_id="number" />
        <number value="0.0" type_id="number" />
    </Assignment>
    <if_stmt>
        <if_part>
            <condition type_id="number">
                <number value="1.0" type_id="number" />
                <boolean_op is_while="false">
                    <LESS_THAN />
                </boolean_op>
                <add type_id="number">
                    <number value="1.0" type_id="number" />
                    <number value="3.0" type_id="number" />
                </add>
            </condition>
            <if_body>
                <Compound_stmt type_id="$anon_3d4eac69">
                    <println>
                        <string value=""CORRECT: 1 < 4"" type_id="char" />
                    </println>
                </Compound_stmt>
            </if_body>
        </if_part>
        <else_part>
            <if_body>
                <Compound_stmt type_id="$anon_3d4eac69">
                    <println>
                        <string value=""Should not print 1 < 4"" type_id="char"
                        />
                    </println>
                    <Assignment type_id="number">
                        <identifier id="elseWrong" level="1" index="0"
                            type_id="number" />
                        <add type_id="number">
                            <identifier id="elseWrong" level="1" index="0"
                                type_id="number" />
                            <number value="1.0" type_id="number" />
                        </add>
                    </Assignment>
                </Compound_stmt>
            </if_body>
        </else_part>
    </if_stmt>
    <if_stmt>
        <if_part>
            <condition type_id="number">
                <number value="10.0" type_id="number" />
                <boolean_op is_while="false">
                    <LESS_THAN />
                </boolean_op>
                <add type_id="number">
                    <number value="1.0" type_id="number" />
                    <number value="3.0" type_id="number" />
                </add>
            </condition>
            <if_body>
                <Compound_stmt type_id="$anon_3d4eac69">
                    <println>
                        <string value=""WRONG: 10 < 4"" type_id="char" />
                    </println>
                    <Assignment type_id="number">
                        <identifier id="wrong" level="1" index="0"
                            type_id="number" />
                        <add type_id="number">
                            <identifier id="wrong" level="1" index="0"
                                type_id="number" />
                            <number value="1.0" type_id="number" />
                        </add>
                    </Assignment>
                </Compound_stmt>
            </if_body>
        </if_part>
        <else_part>
            <if_body>
                <Compound_stmt type_id="$anon_3d4eac69">
                    <println>
                        <string value=""Should Print else 10 < 4""
                            type_id="char" />
                    </println>
                </Compound_stmt>
            </if_body>
        </else_part>
    </if_stmt>
    <if_stmt>
        <if_part>
            <condition type_id="number">
                <number value="10.0" type_id="number" />
                <boolean_op is_while="false">
                    <GREATER_THAN />
                </boolean_op>
                <add type_id="number">
                    <number value="1.0" type_id="number" />
                    <number value="3.0" type_id="number" />
                </add>
            </condition>
            <if_body>
                <Compound_stmt type_id="$anon_3d4eac69">
                    <println>
                        <string value=""CORRECT: 10 > 4"" type_id="char" />
                    </println>
                </Compound_stmt>
            </if_body>
        </if_part>
        <else_part>
            <if_body>
                <Compound_stmt type_id="$anon_3d4eac69">
                    <println>
                        <string value=""Should not Print else 10 > 4""
                            type_id="char" />
                    </println>
                    <Assignment type_id="number">
                        <identifier id="elseWrong" level="1" index="0"
                            type_id="number" />
                        <add type_id="number">
                            <identifier id="elseWrong" level="1" index="0"
                                type_id="number" />
                            <number value="1.0" type_id="number" />
                        </add>
                    </Assignment>
                </Compound_stmt>
            </if_body>
        </else_part>
    </if_stmt>
    <if_stmt>
        <if_part>
            <condition type_id="number">
                <number value="3.0" type_id="number" />
                <boolean_op is_while="false">
                    <GREATER_THAN />
                </boolean_op>
                <number value="4.0" type_id="number" />
            </condition>
            <if_body>
                <Compound_stmt type_id="$anon_3d4eac69">
                    <println>
                        <string value=""WRONG: 3 > 4"" type_id="char" />
                    </println>
                    <Assignment type_id="number">
                        <identifier id="wrong" level="1" index="0"
                            type_id="number" />
                        <add type_id="number">
                            <identifier id="wrong" level="1" index="0"
                                type_id="number" />
                            <number value="1.0" type_id="number" />
                        </add>
                    </Assignment>
                </Compound_stmt>
            </if_body>
        </if_part>
        <else_part>
            <if_body>
                <Compound_stmt type_id="$anon_3d4eac69">
                    <println>
                        <string value=""Should Print 3 > 4"" type_id="char" />
                    </println>
                </Compound_stmt>
            </if_body>
        </else_part>
    </if_stmt>
    <if_stmt>
        <if_part>
            <condition type_id="number">
                <number value="10.0" type_id="number" />
                <boolean_op is_while="false">
                    <GREATER_THAN_OR_EQUALS />
                </boolean_op>
                <add type_id="number">
                    <number value="1.0" type_id="number" />
                    <number value="3.0" type_id="number" />
                </add>
            </condition>
            <if_body>
                <Compound_stmt type_id="$anon_3d4eac69">
                    <println>
                        <string value=""CORRECT: 10 >= 4"" type_id="char" />
                    </println>
                </Compound_stmt>
            </if_body>
        </if_part>
    </if_stmt>
    <if_stmt>
        <if_part>
            <condition type_id="number">
                <number value="4.0" type_id="number" />
                <boolean_op is_while="false">
                    <GREATER_THAN_OR_EQUALS />
                </boolean_op>
                <number value="4.0" type_id="number" />
            </condition>
            <if_body>
                <Compound_stmt type_id="$anon_3d4eac69">
                    <println>
                        <string value=""CORRECT: 4 >= 4"" type_id="char" />
                    </println>
                </Compound_stmt>
            </if_body>
        </if_part>
    </if_stmt>
    <if_stmt>
        <if_part>
            <condition type_id="number">
                <number value="3.0" type_id="number" />
                <boolean_op is_while="false">
                    <GREATER_THAN_OR_EQUALS />
                </boolean_op>
                <number value="4.0" type_id="number" />
            </condition>
            <if_body>
                <Compound_stmt type_id="$anon_3d4eac69">
                    <println>
                        <string value=""WRONG: 3 >= 4"" type_id="char" />
                    </println>
                    <Assignment type_id="number">
                        <identifier id="wrong" level="1" index="0"
                            type_id="number" />
                        <add type_id="number">
                            <identifier id="wrong" level="1" index="0"
                                type_id="number" />
                            <number value="1.0" type_id="number" />
                        </add>
                    </Assignment>
                </Compound_stmt>
            </if_body>
        </if_part>
    </if_stmt>
    <if_stmt>
        <if_part>
            <condition type_id="number">
                <number value="1.0" type_id="number" />
                <boolean_op is_while="false">
                    <LESS_THAN_OR_EQUALS />
                </boolean_op>
                <add type_id="number">
                    <number value="1.0" type_id="number" />
                    <number value="3.0" type_id="number" />
                </add>
            </condition>
            <if_body>
                <Compound_stmt type_id="$anon_3d4eac69">
                    <println>
                        <string value=""CORRECT: 1 <= 4"" type_id="char" />
                    </println>
                </Compound_stmt>
            </if_body>
        </if_part>
    </if_stmt>
    <if_stmt>
        <if_part>
            <condition type_id="number">
                <number value="4.0" type_id="number" />
                <boolean_op is_while="false">
                    <LESS_THAN_OR_EQUALS />
                </boolean_op>
                <number value="3.0" type_id="number" />
            </condition>
            <if_body>
                <Compound_stmt type_id="$anon_3d4eac69">
                    <println>
                        <string value=""WRONG: 4 <= 3"" type_id="char" />
                    </println>
                    <Assignment type_id="number">
                        <identifier id="wrong" level="1" index="0"
                            type_id="number" />
                        <add type_id="number">
                            <identifier id="wrong" level="1" index="0"
                                type_id="number" />
                            <number value="1.0" type_id="number" />
                        </add>
                    </Assignment>
                </Compound_stmt>
            </if_body>
        </if_part>
    </if_stmt>
    <if_stmt>
        <if_part>
            <condition type_id="number">
                <number value="0.11" type_id="number" />
                <boolean_op is_while="false">
                    <LESS_THAN_OR_EQUALS />
                </boolean_op>
                <number value="0.11" type_id="number" />
            </condition>
            <if_body>
                <Compound_stmt type_id="$anon_3d4eac69">
                    <println>
                        <string value=""CORRECT: 0.11 <= 0.11"" type_id="char"
                        />
                    </println>
                </Compound_stmt>
            </if_body>
        </if_part>
        <else_part>
            <if_body>
                <Compound_stmt type_id="$anon_3d4eac69">
                    <println>
                        <string value=""Should NOT Print else 0.11 <= 0.11""
                            type_id="char" />
                    </println>
                    <Assignment type_id="number">
                        <identifier id="elseWrong" level="1" index="0"
                            type_id="number" />
                        <add type_id="number">
                            <identifier id="elseWrong" level="1" index="0"
                                type_id="number" />
                            <number value="1.0" type_id="number" />
                        </add>
                    </Assignment>
                </Compound_stmt>
            </if_body>
        </else_part>
    </if_stmt>
    <if_stmt>
        <if_part>
            <condition type_id="number">
                <number value="2.44" type_id="number" />
                <boolean_op is_while="false">
                    <EQUALITY />
                </boolean_op>
                <number value="2.44" type_id="number" />
            </condition>
            <if_body>
                <Compound_stmt type_id="$anon_3d4eac69">
                    <println>
                        <string value=""CORRECT: 2.44 == 2.44"" type_id="char"
                        />
                    </println>
                </Compound_stmt>
            </if_body>
        </if_part>
        <else_part>
            <if_body>
                <Compound_stmt type_id="$anon_3d4eac69">
                    <println>
                        <string value=""Should Not Print else"" type_id="char"
                        />
                    </println>
                    <Assignment type_id="number">
                        <identifier id="elseWrong" level="1" index="0"
                            type_id="number" />
                        <add type_id="number">
                            <identifier id="elseWrong" level="1" index="0"
                                type_id="number" />
                            <number value="1.0" type_id="number" />
                        </add>
                    </Assignment>
                </Compound_stmt>
            </if_body>
        </else_part>
    </if_stmt>
    <if_stmt>
        <if_part>
            <condition type_id="number">
                <number value="2.0" type_id="number" />
                <boolean_op is_while="false">
                    <EQUALITY />
                </boolean_op>
                <number value="3.0" type_id="number" />
            </condition>
            <if_body>
                <Compound_stmt type_id="$anon_3d4eac69">
                    <println>
                        <string value=""WRONG: 2.0 == 4.0"" type_id="char" />
                    </println>
                    <Assignment type_id="number">
                        <identifier id="wrong" level="1" index="0"
                            type_id="number" />
                        <add type_id="number">
                            <identifier id="wrong" level="1" index="0"
                                type_id="number" />
                            <number value="1.0" type_id="number" />
                        </add>
                    </Assignment>
                </Compound_stmt>
            </if_body>
        </if_part>
    </if_stmt>
    <if_stmt>
        <if_part>
            <condition type_id="number">
                <number value="2.44" type_id="number" />
                <boolean_op is_while="false">
                    <NOT_EQUALS />
                </boolean_op>
                <number value="2.44" type_id="number" />
            </condition>
            <if_body>
                <Compound_stmt type_id="$anon_3d4eac69">
                    <println>
                        <string value=""WRONG: 2.44 != 2.44"" type_id="char" />
                    </println>
                    <Assignment type_id="number">
                        <identifier id="wrong" level="1" index="0"
                            type_id="number" />
                        <add type_id="number">
                            <identifier id="wrong" level="1" index="0"
                                type_id="number" />
                            <number value="1.0" type_id="number" />
                        </add>
                    </Assignment>
                </Compound_stmt>
            </if_body>
        </if_part>
        <else_part>
            <if_body>
                <Compound_stmt type_id="$anon_3d4eac69">
                    <println>
                        <string value=""Should  Print else  2.44 != 2.44""
                            type_id="char" />
                    </println>
                </Compound_stmt>
            </if_body>
        </else_part>
    </if_stmt>
    <if_stmt>
        <if_part>
            <condition type_id="number">
                <number value="2.0" type_id="number" />
                <boolean_op is_while="false">
                    <NOT_EQUALS />
                </boolean_op>
                <number value="3.0" type_id="number" />
            </condition>
            <if_body>
                <Compound_stmt type_id="$anon_3d4eac69">
                    <println>
                        <string value=""CORRECT: 2.0 != 3.0"" type_id="char" />
                    </println>
                </Compound_stmt>
            </if_body>
        </if_part>
    </if_stmt>
    <println>
        <string value="""" type_id="char" />
    </println>
    <println>
        <string value=""Total IF tests:"" type_id="char" />
    </println>
    <println>
        <number value="14.0" type_id="number" />
    </println>
    <println>
        <string value=""IF test passed:"" type_id="char" />
    </println>
    <Assignment type_id="number">
        <identifier id="result" level="1" index="0" type_id="number" />
        <subtract type_id="number">
            <number value="14.0" type_id="number" />
            <identifier id="wrong" level="1" index="0" type_id="number" />
        </subtract>
    </Assignment>
    <println>
        <identifier id="result" level="1" index="0" type_id="number" />
    </println>
    <println>
        <string value=""Total ELSE tests:"" type_id="char" />
    </println>
    <println>
        <number value="7.0" type_id="number" />
    </println>
    <println>
        <string value=""ELSE test passed:"" type_id="char" />
    </println>
    <Assignment type_id="number">
        <identifier id="result2" level="1" index="0" type_id="number" />
        <subtract type_id="number">
            <number value="7.0" type_id="number" />
            <identifier id="wrong" level="1" index="0" type_id="number" />
        </subtract>
    </Assignment>
    <println>
        <identifier id="result2" level="1" index="0" type_id="number" />
    </println>
    <println>
        <string value=""-----------------"" type_id="char" />
    </println>
    <println>
        <string value=""Total test"" type_id="char" />
    </println>
    <println>
        <number value="21.0" type_id="number" />
    </println>
    <println>
        <string value=""total test passed"" type_id="char" />
    </println>
    <println>
        <add type_id="number">
            <identifier id="result" level="1" index="0" type_id="number" />
            <identifier id="result2" level="1" index="0" type_id="number" />
        </add>
    </println>
</program>
