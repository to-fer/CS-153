options {
    MULTI=true;
    VISITOR=true;
}


PARSER_BEGIN(TestTree)
package Test;
import java.io.*;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Paths;

public class TestTree 
{
  public static void main(String[] args) throws IOException
  {
    byte[] encoded = Files.readAllBytes(Paths.get(args[0]));
  	String content = new String(encoded, StandardCharsets.UTF_8);
    Reader sr = new StringReader(content);
  	TestTree calc = new TestTree(sr);
    try {
      SimpleNode root = calc.Expression();
      SumVisitor visitor = new SumVisitor();
      
      root.jjtAccept(visitor, null);
      System.out.println("Sum is " + visitor.sum);
   }
    
    catch (ParseException ex) {
      ex.printStackTrace();
    }
  }
}
PARSER_END(TestTree)

SKIP : {
  " "
}

TOKEN : { 
  <DIGITS : (["0"-"9"])+> | <PLUS : "+"> 
}

SimpleNode Expression() : {} 
{
  
  Operator()
  {return jjtThis;}
}

void Operator() : {Token t;} 
{
  Operand()
  t="+" {jjtThis.jjtSetValue(t.image);}
  Operand()
}

void Operand() : {Token t;} 
{
  t=<DIGITS> {jjtThis.jjtSetValue(new Integer(t.image));}
}